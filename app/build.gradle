plugins {
    id 'com.android.application'
    id 'kotlin-android'
// Подключение плагина для работы с аннотациями (нужно для Room)
    id 'kotlin-kapt'
// Подключение плагина для удобной парселизации
//apply plugin: 'kotlin-android-extensions'
// Подключение парселизации
    id 'kotlin-parcelize'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "ru.konstantin.myfilm"
        minSdk 27
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    // Добавляем файл с ключом
    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("apikey.properties").newDataInputStream())
        def apiKey = properties.getProperty("imdb_api_key", "")
        it.buildConfigField "String", "IMDB_API_KEY", apiKey
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
//AndroidX
    implementation AndroidX.appcompat
    //Kotlin
    implementation Kotlin.ktx
    implementation Kotlin.jdk7
    implementation Kotlin.coroutinescore
    implementation Kotlin.coroutinesandroid
    //Design
    implementation Design.material
    implementation Design.constrlayout
    // Tests
    // Core
    testImplementation Tests.junit
    androidTestImplementation Tests.ext // Нужно для работы AndroidJUnit4 в инструментальных-тестах
    androidTestImplementation Tests.espressocore
    implementation fileTree(dir: Tests.filetreedir, include: Tests.filetreeinclude)
    testImplementation Tests.core
    testImplementation Tests.coroutines
    // Mockito
    testImplementation Tests.mockitocore
    testImplementation Tests.mockitoinline
    testImplementation (Tests.mockitokotlin) {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.mockito'
    }
    // Robolectric
    testImplementation Tests.robolectric
    testImplementation Tests.robolectriccore
    testImplementation Tests.robolectricrunner
    testImplementation Tests.ext // Нужно для работы AndroidJUnit4 в Unit-тестах
    testImplementation Tests.robolectrictruth
    testImplementation Tests.robolectricespressocore
    testImplementation Tests.robolectricespressointents
    // UI Automator
    androidTestImplementation Tests.uiautomator
    androidTestImplementation Tests.uiautomatorrules
    // Fragment
    debugImplementation Tests.fragment
    // RecyclerView
    debugImplementation Tests.recyclerView
    // Lifecycle
    implementation Lifecycle.extensions
    // LiveData
    implementation Lifecycle.ktx
    // Lifecycles only (without ViewModel or LiveData)
    implementation Lifecycle.runtimektx
    implementation Lifecycle.process
    implementation Lifecycle.java8
    // Cicerony
    implementation Cicerony.runtime
    // RxJava
    implementation RxJava.android
    implementation RxJava.reactive
    // Glide
    implementation Glide.runtime
    kapt Glide.compiler
    // OkHTTP
    implementation OkHTTP.runtime
    // Retrofit
    implementation Retrofit.runtime
    implementation Retrofit.gson
    implementation Retrofit.rxJava2
//    implementation Retrofit.rxJava3 // одновременно с rxJava2 не включать
    implementation Retrofit.interceptor // Версия интерсептора должна быть такой же как и версия okHttp
    implementation Retrofit.coroutinesAdapter
    // Room
    implementation Room.runtime
    kapt Room.compiler
    kapt Room.m1Support
    implementation Room.rxJava3
    implementation Room.ktx
    // Coroutines
    implementation Coroutines.android
    // Koin
    //Koin core features
    implementation Koin.core
    //Koin main features for Android (Scope,ViewModel ...)
    implementation Koin.android
    //Koin Java Compatibility
    implementation Koin.compat
    // For Retrofit 2 coroutines
    implementation Koin.retrofitcoroutines
    // Koin for Tests
    testImplementation Koin.testsandroidx
    testImplementation Koin.testsio
}